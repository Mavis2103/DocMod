events {
    worker_connections 1024;
}

http {
    upstream docmod_backend {
        server docmod-bff:3000;
    }

    server {
        listen 80;
        server_name localhost;

        location /api/ {
            proxy_pass http://docmod_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers (nếu cần)
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            
            # Handle preflight requests
            if ($request_method = OPTIONS) {
                return 200;
            }
        }

        location /view/ {
            alias /app/;
            index index.html;
            try_files $uri $uri/ $uri/index.html =404;
        }

        location ~ ^/view/([^/]+)/?(.*)$ {
            alias /app/$1/.vitepress/dist/;
            index index.html;
            try_files $2 $2/ $2/index.html /index.html =404;
        }

        # Redirect /assets/ requests to the correct project path
        # This handles cases where HTML files reference assets with absolute paths like /assets/index.css
        location ~ ^/assets/(.*)$ {
            # Extract the project name from the referer header
            set $project_name "";
            if ($http_referer ~ "^https?://[^/]+/view/([^/]+)") {
                set $project_name $1;
            }
            
            # If we can determine the project name, redirect to the correct path
            if ($project_name != "") {
                return 301 /view/$project_name/assets/$1;
            }
            
            # Fallback: return 404 if we can't determine the project
            return 404;
        }

        location = / {
            return 301 /view/;
        }

        # Handle 404 errors
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Handle server errors (50x)
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
